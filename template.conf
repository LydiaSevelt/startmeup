# Template config file for generic init scripts

# Full path to the binary
# 
# example: /usr/sbin/thingd
BINARY='$BINARY'

# Optional?
# Full path to config file for daemon
CONFIG='$CONFIG'

# Path to PID file, leave blank for default
# Default is to determine PID from process table
PIDFILE='$PIDFILE'

# Special method to reload daemon's config file, leave blank for default
# Default is to issue a HUP signal to the running daemon
RELOADCMD='$RELOADCMD'

# Command line options to pass to the binary if any
CMDLINEOPTS='$CMDLINEOPTS'

# Optional short description
# leave blank for default
# Default is to use the binary name
DESCRIPTION='$DESCRIPTION'

####
#
# Changes to the values below here will not take effect until you run:
#
# startmeup -U /usr/sbin/thingd  or  startmeup -U all
#
# This will update the headers of the init scripts with the new values
#
###

# Provides Name
# Default is to use the binary name, no path, (basename $BINARY)
# Leave blank for default
NAME='$NAME'

# Start levels
# which run levels should by default run the init script with a start argument
# to start the services controlled by the init script.
# 
# Runlevels:
# 0	halt
# 1	single user mode
# 2	multiuser with no network services exported
# 3	normal/full multiuser
# 4	reserved for local use, default is normal/full multiuser
# 5	multiuser with a display manager or equivalent
# 6	reboot
#
# Space separated list of numbers
START_LEVELS='$START_LEVELS'

# Stop levels
# which run levels should by default run the init script with a stop argument
# to start the services controlled by the init script.
#
# Space separated list of numbers
STOP_LEVELS='$STOP_LEVELS'

# It is unlikely most users will need to change anything below here

# Should start
# facilities which, if present, should be available during startup of this service.
# This allows for weak dependencies which do not cause the service to fail if a facility is not available.
# The service may provide reduced functionality in this situation. Conforming  applications should not rely on the existence of this feature.
#
# services are referenced by Provides name which is usally the name of the script
# examples: smbd nfs-kernel-server libvirtd
# When in doubt consult the header of the init script for the "Privodes" line to find the name
#
# Blank by default - If you don't know, you probably don't need it
SHOULD_START='$SHOULD_START'

# Should stop
# facilities which should be available during shutdown of this service.
# 
# services are referenced by Provides name which is usally the name of the script
# examples: smbd nfs-kernel-server libvirtd
# When in doubt consult the header of the init script for the "Privodes" line to find the name
#
# Blank by default - If you don't know, you probably don't need it
SHOULD_STOP='$SHOULD_STOP'

# Requred for start
# facilities which must be available during startup of this service.
# Used to determine boot order
#
# Consult /etc/insserv.conf and /etc/insserv.conf.d/ for details on configured variable references
# Additional service requirements are referenced by name (ex. smbd, nfs-kernel-server, libvirtd)
# When in doubt consult the header of the init script for the service you need to require
# Defaults are provided, add additional requirements as needed
#
# If you don't know what you need then the defaults are probably fine
# Be sure to use single quotes to preserve literal strings here
REQ_START='$REQ_START'

# Required for stop
# facilities which must be available during the shutdown of this service.
# Used to determine shutdown order
#
# Consult /etc/insserv.conf and /etc/insserv.conf.d/ for details on configured variable references
# Defaults are provided
# If you don't know what you need then the defaults are probably fine
# Be sure to use single quotes to preserve literal strings here
REQ_STOP='$REQ_STOP'
